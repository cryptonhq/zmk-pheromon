//#include "pheromon.dtsi"

#include <dt-bindings/zmk/matrix_transform.h>

&pinctrl {
    spi0_default: spi0_default {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 17)>,  // SRCLK on P0.17 (GP2)
                    <NRF_PSEL(SPIM_MOSI, 0, 22)>, // SER on P0.22 (GP4)
                    <NRF_PSEL(SPIM_MISO, 0, 25)>; // MISO not used but required
        };
    };

    spi0_sleep: spi0_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 17)>,
                    <NRF_PSEL(SPIM_MOSI, 0, 22)>,
                    <NRF_PSEL(SPIM_MISO, 0, 25)>;
            low-power-enable;
        };
    };
};

&spi0 {
    status = "okay";
    pinctrl-0 = <&spi0_default>;
    pinctrl-1 = <&spi0_sleep>;
    pinctrl-names = "default", "sleep";
    cs-gpios = <&gpio0 24 GPIO_ACTIVE_LOW>;  // RCLK on P0.24 (GP5)

    shift_reg: 595@0 {
        compatible = "zmk,gpio-595";
        status = "okay";
        gpio-controller;
        spi-max-frequency = <200000>;
        reg = <0>;
        label = "74HC595";
        #gpio-cells = <2>;
        ngpios = <8>;
    };
};

&i2c0_default {
    group1 {
        psels = <NRF_PSEL(TWIM_SDA, 1, 0)>,  // Pin P1.00
                <NRF_PSEL(TWIM_SCL, 0, 11)>; // Pin P0.11
    };
};

&i2c0_sleep {
    group1 {
        psels = <NRF_PSEL(TWIM_SDA, 1, 0)>,  // Pin P1.00
                <NRF_PSEL(TWIM_SCL, 0, 11)>; // Pin P0.11
        low-power-enable;
    };
};

&i2c0 {
    status = "okay";
    clock-frequency = <I2C_BITRATE_STANDARD>;

    oled: ssd1306@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3c>;
        width = <128>;
        height = <32>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <31>;
        segment-remap;
        com-invdir;
        com-sequential;
        inversion-on;
        prechargep = <0x22>;
    };
};

/ {
   chosen {
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
        zephyr,display = &oled;

    };

    // Use a different label for the encoder
    encoder: encoder_1 {
        compatible = "alps,ec11";
        a-gpios = <&pro_micro 28 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 27 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        resolution = <4>;
        steps = <80>;
        status = "okay";
    };

    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder>;
        triggers-per-rotation = <20>;
    };

    kscan0: kscan_0 {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";
        diode-direction = "col2row";

        col-gpios
            = <&shift_reg 0 GPIO_ACTIVE_HIGH> // C0: QH
            , <&shift_reg 1 GPIO_ACTIVE_HIGH> // C1: QG
            , <&shift_reg 2 GPIO_ACTIVE_HIGH> // C2: QF
            , <&shift_reg 3 GPIO_ACTIVE_HIGH> // C3: QE
            , <&shift_reg 4 GPIO_ACTIVE_HIGH> // C4: QD
            , <&shift_reg 5 GPIO_ACTIVE_HIGH> // C5: QC
            , <&shift_reg 6 GPIO_ACTIVE_HIGH> // C6: QB
            , <&shift_reg 7 GPIO_ACTIVE_HIGH> // C7: QA
            , <&pro_micro 9 GPIO_ACTIVE_HIGH> // C8: GPIO 9
            , <&pro_micro 22 GPIO_ACTIVE_HIGH>  // C9: GPIO 22
            , <&pro_micro 20 GPIO_ACTIVE_HIGH>  // C10: GPIO 20
            , <&pro_micro 23 GPIO_ACTIVE_HIGH>  // C11: GPIO 23
            , <&pro_micro 0 GPIO_ACTIVE_HIGH> // C12: GPIO 0
            , <&pro_micro 1 GPIO_ACTIVE_HIGH> // C13: GPIO 1
            ;

        row-gpios
            = <&pro_micro 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // R0: GPIO 8
            , <&pro_micro 25 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // R1: GPIO 25
            , <&pro_micro 18 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // R2: GPIO 18
            , <&pro_micro 24 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // R3: GPIO 24
            , <&pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // R4: GPIO 21
            ;
    };
     default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <14>;
        rows = <5>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11) RC(0,12) RC(0,13)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11) RC(1,12) RC(1,13)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11) RC(2,12)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11) RC(3,12) RC(3,13)
            RC(4,0) RC(4,1) RC(4,2)                 RC(4,6)                          RC(4,11) RC(4,12) RC(4,13)
        >;
    };
};
