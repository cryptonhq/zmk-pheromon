#include "pheromon.dtsi"

&pinctrl {
    spi0_default: spi0_default {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 17)>,  // SRCLK on P0.17 (GP2)
                    <NRF_PSEL(SPIM_MOSI, 0, 22)>, // SER on P0.22 (GP4)
                    <NRF_PSEL(SPIM_MISO, 0, 25)>; // MISO not used but required
        };
    };

    spi0_sleep: spi0_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 17)>,
                    <NRF_PSEL(SPIM_MOSI, 0, 22)>,
                    <NRF_PSEL(SPIM_MISO, 0, 25)>;
            low-power-enable;
        };
    };
};

&spi0 {
    status = "okay";
    pinctrl-0 = <&spi0_default>;
    pinctrl-1 = <&spi0_sleep>;
    pinctrl-names = "default", "sleep";
    cs-gpios = <&gpio0 24 GPIO_ACTIVE_LOW>;  // RCLK on P0.24 (GP5)

    shift_reg: 595@0 {
        compatible = "zmk,gpio-595";
        status = "okay";
        gpio-controller;
        spi-max-frequency = <200000>;
        reg = <0>;
        label = "74HC595";
        #gpio-cells = <2>;
        ngpios = <8>;
    };
};
&i2c0_default {
    group1 {
        psels = <NRF_PSEL(TWIM_SDA, 1, 0)>,  // Pin P1.00
                <NRF_PSEL(TWIM_SCL, 0, 11)>; // Pin P0.11
    };
};

&i2c0_sleep {
    group1 {
        psels = <NRF_PSEL(TWIM_SDA, 1, 0)>,  // Pin P1.00
                <NRF_PSEL(TWIM_SCL, 0, 11)>; // Pin P0.11
        low-power-enable;
    };
};

&i2c0 {
    status = "okay";
    clock-frequency = <I2C_BITRATE_STANDARD>;

    oled: ssd1306@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3c>;
        width = <128>;
        height = <32>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <31>;
        segment-remap;
        com-invdir;
        com-sequential;
        inversion-on;
        prechargep = <0x22>;
    };
};

/ {
    kscan0: kscan_0 {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";
        diode-direction = "col2row";

        col-gpios                             // col #
        = 
            <&shift_reg 0 GPIO_ACTIVE_HIGH>, // C0: QH
            <&shift_reg 1 GPIO_ACTIVE_HIGH>, // C1: QG
            <&shift_reg 2 GPIO_ACTIVE_HIGH>, // C2: QF
            <&shift_reg 3 GPIO_ACTIVE_HIGH>, // C3: QE
            <&shift_reg 4 GPIO_ACTIVE_HIGH>, // C4: QD
            <&shift_reg 5 GPIO_ACTIVE_HIGH>, // C5: QC
            <&shift_reg 6 GPIO_ACTIVE_HIGH>, // C6: QB
            <&shift_reg 7 GPIO_ACTIVE_HIGH>, // C7: QA
            <&pro_micro 9 GPIO_ACTIVE_HIGH>, // C8: GPIO 9
            <&pro_micro 22 GPIO_ACTIVE_HIGH>, // C9: GPIO 22
            <&pro_micro 20 GPIO_ACTIVE_HIGH>, // C10: GPIO 20
            <&pro_micro 23 GPIO_ACTIVE_HIGH>, // C11: GPIO 23
            <&pro_micro 0 GPIO_ACTIVE_HIGH>, // C12: GPIO 0
            <&pro_micro 1 GPIO_ACTIVE_HIGH>  // C13: GPIO 1
        ;

        row-gpios = 
            <&pro_micro  8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,  // R0: GPIO 8
            <&pro_micro 25 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,  // R1: GPIO 25
            <&pro_micro 18 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,  // R2: GPIO 18
            <&pro_micro 24 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,  // R3: GPIO 24
            <&pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>   // R4: GPIO 21
        ;
    };
};
